package org.example.lua

sealed class Event(
    val pos: Int,
    val actors: List<Int>
) {
    abstract fun desc(): String
    abstract fun symbol(): String
}

class KillEvent(
    pos: Int,
    actors: List<Int>
) : Event(pos, actors) {
    override fun desc(): String {
        return "—É–±–∏—Ç"
    }

    override fun symbol(): String {
        return "üíÄ"
    }
}

class SilenceEvent(
    pos: Int,
    actors: List<Int>
) : Event(pos, actors) {
    override fun desc(): String {
        return "–Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —É—á–∞—Å—Ç–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏"
    }

    override fun symbol(): String {
        return "üíã"
    }
}